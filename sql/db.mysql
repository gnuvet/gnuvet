/*
 * sql/db.sql: script to create the gnuvet database
 *
 * Copyright (c) 2009 Enno Deimel MRCVS <ennodotvetatgmxdotnet>
 *
 * This file is part of gnuvet, published under the GNU General Public License
 * (GPL in short).  See the file GPL for more Information.
 */

create database if not exists gnuvet character set utf8;
use gnuvet;

set NAMES utf8;

create table if not exists dblive(dbliveId tinyint(1) unsigned not null);

create table if not exists home(BranchId smallint unsigned not null auto_increment primary key, BranchName varchar(120) not null, BranchHouseN varchar(80) not null, BranchStreet varchar(80) not null, BranchVillage varchar(80) not null, BranchCity varchar(80) not null, BranchRegion varchar(80) not null, BranchPostcode varchar(10) not null, BranchTel varchar(30) not null, BranchMobile varchar(30) not null, BranchFax varchar(30) not null, BranchEmail varchar(80) not null, BranchVatReg varchar(20) not null, BranchCurrency varchar(5) not null, BranchCurrencySymbol varchar(3) not null);

create table if not exists boxes(BoxId smallint unsigned not null auto_increment primary key, BoxName varchar(80) not null, BoxIPv4 int unsigned not null, unique key(BoxIPv4), BoxBranch smallint unsigned not null, BoxFunction enum('MasterServer', 'LocalServer', 'Station') not null);

# DE: Title enum('Hr.','Fr.','Frl.'/*?*/,'Mag.','Dr.','Prof.')
# DE: StaffFunction enum('GnuVet','Vet','Ordinationshilfe','Rezeption','Helfer')
create table if not exists staff(StaffId smallint unsigned not null auto_increment primary key, StaffFunction enum('GnuVet', 'Vet', 'Nurse', 'Reception', 'Helper', 'Work Experience') not null, StaffPermission tinyint unsigned not null, StaffTitle enum('Mr', 'Mrs', 'Ms', 'Dr', 'Sir', 'Lady', 'Lord') not null, StaffSex enum ('m','f') not null, StaffSurname varchar(80) not null, StaffMiddlename varchar(25) not null, StaffForename varchar(80) not null, StaffPass char(16) binary not null, StaffShort varchar(5) not null, unique key(StaffShort), StaffTel varchar(30) not null, StaffMobile varchar(30) not null, StaffEmail varchar(80) not null);

create table if not exists clients(CId mediumint unsigned not null auto_increment primary key, CTitle enum('Mr', 'Mrs', 'Ms', 'Sir', 'Lady', 'Lord', 'Dr', 'n/a') not null, CSurname varchar(80) not null, CMiddlename varchar(25) not null, CForename varchar(80) not null, key CName(CSurname,CForename), CHouseN varchar(80) not null, CStreet varchar(80) not null, key CAddressSH(CStreet,CHouseN), CVillage varchar(80) not null, CCity varchar(80) not null, key CAddressCV(CCity, CVillage), CRegion varchar(80) not null, CPostcode varchar(10) not null, key(CPostcode), CTelHome varchar(30) not null, CTelWork varchar(30) not null, CMobile1 varchar(30) not null, CMobile2 varchar(30) not null, CEmail varchar(80) not null, BadDebt bool not null default 0, CReg date not null, CLast datetime not null, key (CLast), CAnno varchar(255) not null);

create table if not exists locations(LId smallint unsigned not null auto_increment primary key, LName varchar(80) not null, key(LName), LHouseN varchar(80) not null, LStreet varchar(80) not null, key LAddressSH(LStreet,LHouseN), LVillage varchar(80) not null, LCity varchar(80) not null, key LAddressCV(LCity,LVillage), LRegion varchar(80) not null, LPostcode varchar(10) not null, key(LPostcode), LTel varchar(30) not null, LMobile varchar(30) not null, LAnno varchar(255) not null);

create table if not exists species(SpecId tinyint unsigned not null auto_increment primary key, SpecName varchar(80) not null, SpecCode char(1) not null, unique key(SpecName), unique key(SpecCode));
# actually mostly genus/order not species

create table if not exists breeds(BreedId smallint unsigned not null auto_increment primary key, BSpec tinyint unsigned not null, BreedName varchar(80) not null, unique key(BreedName), BreedAbbr varchar(5) not null, unique key(BreedAbbr));

create table if not exists basecolours(BColId tinyint unsigned not null auto_increment primary key, BCol varchar(25), unique key(BCol), BCCombine enum('y','n','o') not null, BCSpecCode varchar(120) not null);
# BCCombine y=possible n=no o=obligatory

create table if not exists colours(ColId smallint unsigned not null auto_increment primary key, CSpecCode varchar(120) not null, Col1 tinyint unsigned not null, Col2 tinyint unsigned not null, Col3 tinyint unsigned not null, unique key(Col1,Col2,Col3));

create table if not exists patients(PId mediumint unsigned not null auto_increment primary key, PName varchar(80) not null, key(PName), PCId mediumint unsigned not null, key(PCId), PBreed smallint unsigned not null, key(PBreed), Xbreed bool not null default 0, Dob date not null, EstDob bool not null default 0, PColour smallint unsigned not null, key(PColour), Sex enum('m','f','h','n') not null, key(Sex), DNeutered date not null, key(DNeutered), Vicious bool not null default 0, PReg date not null, PAnno varchar(255) not null, PLoc smallint unsigned not null, key(PLoc), IdentNo varchar(20) not null, key(IdentNo), RIP bool not null default 0, key(RIP), PLast datetime not null, key(PLast), PIns tinyint unsigned not null, PChr smallint unsigned not null);
# DNeutered 0000-0-0 (0) not, 0001-1-1 (1) yes date unknown, 0001-1-2 unknown
# RecallDate here?  Or separate table(RPId, RDate)?

create table rips(RPId mediumint unsigned not null, primary key(RPId), RIPDate datetime not null);

create table if not exists vats(VatId tinyint unsigned not null auto_increment primary key, VatName varchar(30) not null, VatRate dec(4,4) unsigned not null);

# compound product: PrId, set Compounds?
create table if not exists addongood(AddonId tinyint unsigned not null auto_increment primary key, AddonSId mediumint unsigned not null, AddonName varchar(30) not null);

create table if not exists markups(MarkupId tinyint unsigned not null auto_increment primary key, MarkupName varchar(30) not null, Markup dec(4,3) unsigned not null);

create table if not exists units(UnitId tinyint unsigned not null auto_increment primary key, UnitName varchar(20) not null);

create table if not exists products(PrId smallint unsigned not null auto_increment primary key, PrName varchar(80) not null, key(PrName), PrShort varchar(10) not null, key(PrShort), PrCode enum('g','s') not null, PrPrice dec(6,2) unsigned not null, PrVat tinyint unsigned not null, PrDispU smallint unsigned not null, PrLabel bool not null default 0);

create table if not exists goods(GId smallint unsigned not null primary key, GMainIngr smallint unsigned not null, GPerm bool /*0 OTC  1 POM*/ not null, GLabel smallint unsigned not null, GAddon set('1', '2', '3', '4', '5', '6', '7', '8', '9') not null, GOrdU smallint unsigned not null, GDispUpOrdU dec(6,2) unsigned not null, GMarkup tinyint unsigned not null, GBarcode int unsigned not null, GStock dec(6,3) unsigned not null, GLimit dec(4,2) unsigned not null, GSupplier smallint unsigned not null, GOrdId /*e.g. art.no.*/ varchar(30) not null); // add label

create table if not exists vaccinations(VacId smallint unsigned not null auto_increment primary key, VacType tinyint unsigned not null, VacGId mediumint unsigned not null, VacSId smallint unsigned not null, VacDue smallint unsigned not null);

create table if not exists vactypes(VtId smallint unsigned not null auto_increment primary key, VtName varchar(20) not null);

create table if not exists categories(CatId smallint unsigned not null auto_increment primary key, Category varchar(40) not null, unique key(Category));

create table if not exists ingredients(IngrId smallint unsigned not null auto_increment primary key, Ingredient varchar(50) not null, IngrCatId smallint unsigned not null, unique key(Ingredient));

create table if not exists suppliers(SupId smallint unsigned not null auto_increment primary key, SupName varchar(80) not null, unique key(SupName), SupHouseN varchar(80) not null, SupStreet varchar(80) not null, SupVillage varchar(80) not null, SupCity varchar(80) not null, SupRegion varchar(80) not null, SupPostCode varchar(10) not null, SupTel varchar(30) not null, SupFax varchar(30) not null, SupMobile varchar(30) not null, SupEmail varchar(80) not null, SupOrderMethod enum('fax','email','modem','online','application','phone','letter') not null, SupRepTitle enum('Mr', 'Mrs', 'Ms', 'Sir', 'Lady', 'Lord', 'Dr') not null, SupRepSurname varchar(80) not null, SupRepMiddlename varchar(25) not null, SupRepForename varchar(80) not null);

create table if not exists instructions(IId smallint unsigned not null auto_increment primary key,IShort varchar(10) not null,IText varchar(80) not null);

create table if not exists symptoms(SyId smallint unsigned not null auto_increment primary key, Symptom varchar(80) not null);

create table if not exists chronic(ChrId smallint unsigned not null auto_increment primary key,ChrName varchar(80) not null);

#create table if not exists repeats(RepId smallint unsigned not null auto_increment primary key, RepText varchar(255) not null, RepMin smallint unsigned not null, RepMax smallint unsigned not null);
# RepMin, RepMax: days

##create table if not exists invoices(InvoiceId int unsigned not null auto_increment primary key,  InvoiceDate date not null, InvoiceSum dec(6,2) not null);

##create table if not exists receipts(RecId int unsigned not null auto_increment primary key, RecDate date not null, RecCId mediumint unsigned not null, RecSum dec(6,2) not null, RecPayment enum('Cash','Cheque','Credit Card','Debit Card','Remit') not null); # DE RecPayment('Bar','Scheck','Kreditkarte','Kontokarte','Überweisung');

#create table if not exists statements(StatementId smallint unsigned not null auto_increment primary key, StatementEnv enum ('Invoice','Receipt','Letter','Statement') not null, Statement varchar(80) not null);

# ??? hierwei
##create table if not exists orders(OrderId int unsigned not null auto_increment primary key, OrderDate datetime not null, OrderGoodsId mediumint unsigned not null, OrderAmount smallint unsigned not null, OrderGoodsVat tinyint unsigned not null, OrderSupplier smallint unsigned not null, OrderMethod tinyint unsigned not null, OrderedDate datetime not null);

create table if not exists ordermeths(OMId tinyint unsigned not null auto_increment primary key, OMethod enum('fax','email','online','phone','letter') not null);

create table if not exists insurance(InsId int unsigned not null auto_increment primary key, IName varchar(80) not null, IHouseN varchar(80) not null, IStreet varchar(80) not null, IVillage varchar(80) not null, ICity varchar(80) not null, IRegion varchar(80) not null, IPostcode varchar(10) not null, ITel varchar(30) not null, IEmail varchar(80) not null, IAnno varchar(255) not null);

create table if not exists batchnos(BatchId smallint unsigned not null auto_increment primary key, BGId mediumint unsigned not null, Batch varchar(25) not null);

#create table if not exists apps(AId int unsigned not null auto_increment primary key, ASlotId tinyint unsigned not null, AStaffId smallint unsigned not null, ADateTime datetime not null, ADuration tinyint unsigned not null /* minutes */, APId mediumint unsigned not null, ACId mediumint unsigned not null, AAnno varchar(80) not null);

#create table if not exists slots(SlId mediumint unsigned not null auto_increment primary key, SlName varchar(80) not null);

##################
# RECONSIDER THESE
##################
#hierwei better do this in BINARY as waitDATE ?
# create table if not exists waiting(WaitId integer unsigned not null auto_increment primary key, ArrivedOrder tinyint unsigned not null, WaitingDateTime datetime not null, WaitingPId mediumint unsigned not null, WaitingBookedTime enum('5','10','15','20','30','45','60','90','120') not null, WaitingForStaff smallint unsigned not null, WaitingForServ smallint unsigned not null, WaitingComment varchar(50) not null, WaitingStatus enum('w','s','d','p','f')/*waiting served done payment finished*/ not null);

# change this to reflect full table structure
# rather obsolete old entry and create new one
#create table if not exists serviceshistory(ServHistId int unsigned not null auto_increment primary key, ServId smallint unsigned not null, ServFormerPrice dec(6,2) unsigned not null, ServChanged date not null);

# change this to reflect full table structure
# s.above
#create table if not exists goodshistory(GoodsHistId int unsigned not null auto_increment primary key, GoodsId smallint unsigned not null, GoodsFormerPrice dec(6,2) unsigned not null, GoodsChanged date not null);

#create table if not exists goodinstruct(GInstrId smallint unsigned not null auto_increment primary key, IGGId mediumint unsigned not null, IGInstr smallint unsigned not null);

##################
### IN THE BINARY:
##################
# patient weight:
#create table if not exists weightN(WId smallint unsigned not null auto_increment primary key, WEst bool not null default 0, WDate datetime not null, Weight dec(7,3) unsigned not null, WStaffId smallint unsigned not null);

# patient vaccs:
#create table if not exists vacN(VId smallint unsigned not null auto_increment,VType tinyint unsigned not null,VGId smallint unsigned not null,VDate datetime,VDue date);

# patient clinical history:
#create table if not exists chN[N=PId](ChId int unsigned not null auto_increment primary key,ChDateTime datetime not null,ChText varchar(1024) not null,LSymptom smallint unsigned not null,StaffId smallint unsigned not null)
# RecallDate date not null, SeenDate timestamp not null); -> tables recalls, lastseen

#create table if not exists accountN[N=CId](AccId mediumint unsigned not null auto_increment primary key, APrId mediumint unsigned not null, AccItem varchar(1024) not null, APrice dec(6,2) not null, AVat dec(6,3) not null, AccBalance dec(6,3) not null, AccItemInvoiceId int unsigned not null, AccountItemRecId int unsigned not null);

# ?
#create table if not exists pTN[N=PId](ChId int unsigned not null auto_increment primary key,ChDateTime datetime not null,ChText varchar(1024) not null,ChAmount mediumint not null,ChPrice mediumint not null,LSymptom smallint unsigned not null,StaffId smallint unsigned not null);

# product action, special price for certain period:
#create table if not exists paction(PAId int unsigned not null auto_increment primary key, PAPId smallint unsigned not null, PAName varchar(80) not null, PARed dec(3,3) unsigned not null, PAStart date not null, PAEnd date not null);

# change of ownership:
#create table if not exists ownerchange(OCPId mediumint unsigned not null, OCPCId mediumint unsigned not null, OCDate date not null);

#create table if not exists orderDATETIME(OId int unsigned not null auto_increment primary key, ONo varchar(15) not null, OGId smallint unsigned not null, OGPrice dec(6,2) not null, OGVat tinyint unsigned not null, OGAmount smallint unsigned not null, OGDate date not null, OSentDate date not null, OGReceived date/*?*/ not null, OGPaid date not null);

#create table if not exists balanceN[N=CId](BalId mediumint usigned not null auto_increment primary key, Balance integer not null); ?

#journals from present data.
#archives:older 2a  waiting invoices?  receipts?

## these will better be represented in chN/accountN?:
#create table if not exists servsN(ServsId int unsigned not null auto_increment primary key, ServsDateTime datetime not null, ServsItemId smallint unsigned not null, ServsItemAmount dec(6,2) not null, StaffId smallint unsigned not null);

#create table if not exists medicN(MedicId int unsigned not null auto_increment primary key, MedicDateTime datetime not null, MedicItemId smallint unsigned not null, MedicItemAmount dec(6,2) not null, MedicInstruction varchar(80) not null, StaffId smallint unsigned not null);

#create table if not exists salesN(SalesId int unsigned not null auto_increment primary key, SalesDateTime datetime not null, SalesItemId smallint unsigned not null, SalesItemAmount dec(6,2) not null, StaffId smallint unsigned not null);

